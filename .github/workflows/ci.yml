name: CI

on: [push, pull_request]

jobs:

  code-style:
    runs-on: ubuntu-latest

    name: Check coding standards

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install poetry
        shell: bash
        run: |
          python -m pip install poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Check code formatting
        run: poetry run poe style

      - name: Run linter
        run: poetry run poe lint

      - name: Check types
        run: poetry run poe types

      - name: Check rst syntax
        run: poetry run poe check-docs

  run-tests:
    runs-on: ${{ matrix.os }}-latest

    name: Run tests

    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install poetry
        shell: bash
        run: |
          python -m pip install poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest -v

  build-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install poetry
        shell: bash
        run: |
          python -m pip install poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Build package
        run: poetry build

      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        run: poetry publish -n
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.pypi }}
