[tool.poetry]
name = "scripts-project"
version = "0.1.0"
description = "scripts-project"
authors = ["Nat Noordanus <n@natn.me>"]

packages = [
  { include = "pkg" }
]

[tool.poe]
default_task_type = "script"
default_array_item_task_type = "cmd"

[tool.poe.tasks]
# Interpret subtasks as cmd instead of ref
composite_task = ["poe_test_echo Hello", "poe_test_echo 'World!'"]

# test_setting_default_task_type
echo-args = "pkg:echo_args"

static-args-test = """
  pkg:describe_args(
    'pat a cake', 1, 1.2, False, True,
    ..., hex(99), chr(55), next(zip(['first'], ({'second': "lol"}).items())), bool(1),
    **({"spread": set((1,2,3,2,1))}),
    thing="stuff", data1=b'stuff', data2=bytes((66,67,68)), eight=(int('8'), 8.0, 8),
  )
"""

# For testing that deep module scope references work & use_exec works with script tasks
call_attrs.script   = "pkg:Scripts.Deep.fun(0)"
call_attrs.use_exec = true

greet = "pkg:greet"

async-task.script = "pkg:async_task"
async-task.args = ["a","b"]

  [tool.poe.tasks.print-script-result]
  script       = "pkg:get_random_number"
  print_result = true

  [tool.poe.tasks.dont-print-script-result]
  script = "pkg:get_random_number"

  [tool.poe.tasks.greet-passed-args]
  # weird formatting is intentional
  script = """
    pkg:greet(
      greeting, user,
      dÃªÆ’Ã¤Ã¼lt='ðŸ‘‹', optional=optional,
      upper=upper)"""
  args = ["greeting", "user", "optional", "upper"]

  [tool.poe.tasks.greet-full-args]
  script = "pkg:greet(greeting, user, upper=(not not upper), fvar=user_height, ivar=age)"

    [tool.poe.tasks.greet-full-args.args.greeting]
    options = ["--greeting", "-g"]
    type = "string"
    default = "hi"

    [tool.poe.tasks.greet-full-args.args.user]
    # defaults to string if no type given

    [tool.poe.tasks.greet-full-args.args.upper]
    default = false
    type = "boolean"

    [tool.poe.tasks.greet-full-args.args.age]
    options = ["--age", "-a"]
    type = "integer"

    [tool.poe.tasks.greet-full-args.args.user_height]
    options = ["--height", "-h"]
    type = "float"
    help = "The user's height in meters"

  [tool.poe.tasks.greet-strict]
  script = "pkg:greet(greeting, user=name)"
  help   = "All arguments are required"
  env    = { DOES = "does", STUFF = "matter" }

    [tool.poe.tasks.greet-strict.args.greeting]
    default = "${DOES}n't ${STUFF}"
    required = true
    help = "this one is required"

    [tool.poe.tasks.greet-strict.args.name]
    required = true
    help = "and this one is required"

  [tool.poe.tasks.greet-positional]
  script = "pkg:greet(greeting, user=username, upper=uppercase)"
  env.DEFAULT_GREETING.default = "yo"

    [[tool.poe.tasks.greet-positional.args]]
    name = "greeting"
    positional = true
    default = "${DEFAULT_GREETING}"
    help = "this one is required"

    [[tool.poe.tasks.greet-positional.args]]
    name = "username"
    positional = "user"
    required = true
    help = "and this one is required"

    [[tool.poe.tasks.greet-positional.args]]
    name = "uppercase"
    options = ["--upper"]
    type = "boolean"

  [tool.poe.tasks.multiple-value-args]
  script = "pkg:echo_script(first, second, widgets=widgets, engines=engines)"

    [[tool.poe.tasks.multiple-value-args.args]]
    name       = "first"
    positional = true

    [[tool.poe.tasks.multiple-value-args.args]]
    name       = "second"
    positional = true
    multiple   = true
    type       = "integer"

    [[tool.poe.tasks.multiple-value-args.args]]
    name     = "widgets"
    multiple = 2

    [[tool.poe.tasks.multiple-value-args.args]]
    name     = "engines"
    multiple = true
    required = true

  [tool.poe.tasks.multiple-lines-help]
  script = "pkg:echo_script(first, second, widgets=widgets, engines=engines)"
  help = """
Multilines
  Creating multi-line documentation for greater detail and inclusion of examples
"""

    [[tool.poe.tasks.multiple-lines-help.args]]
    name       = "first"
    positional = true
    help =    """
First positional arg
  documentation multiline
"""

    [[tool.poe.tasks.multiple-lines-help.args]]
    name       = "second"
    positional = true
    multiple   = true
    type       = "integer"
    help =    """
Multiple positional arg
  documentation multiline
"""

    [[tool.poe.tasks.multiple-lines-help.args]]
    name     = "widgets"
    multiple = 2
    help =    """
Multiple arg
  documentation multiline
"""

    [[tool.poe.tasks.multiple-lines-help.args]]
    name     = "engines"
    default = "true"
    help =    """
Default arg
  documentation multiline
"""


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
