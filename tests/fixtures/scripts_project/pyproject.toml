[tool.poetry]
name = "scripts-project"
version = "0.1.0"
description = "scripts-project"
authors = ["Nat Noordanus <n@natn.me>"]

packages = [
  { include = "pkg" }
]

[tool.poe]
default_task_type = "script"
default_array_item_task_type = "cmd"

[tool.poe.tasks]
# Interpret subtasks as cmd instead of ref
composite_task = ["echo Hello", "echo World!"]

# test_setting_default_task_type
echo-args = "pkg:echo_args"

static-args-test = """
  pkg:describe_args(
    'pat a cake', 1, 1.2, False, True,
    ..., hex(99), chr(55), next(zip(['first'], ({'second': "lol"}).items())), bool(1),
    **({"spread": set((1,2,3,2,1))}),
    thing="stuff", data1=b'stuff', data2=bytes((66,67,68)), eight=(int('8'), 8.0, 8),
  )
"""

call_attrs = "pkg:Scripts.Deep.fun(0)"

greet = "pkg:greet"

  [tool.poe.tasks.greet-passed-args]
  # weird formatting is intentional
  script = """
    pkg:greet(
      greeting, user,
      dÃªÆ’Ã¤Ã¼lt='ðŸ‘‹', optional=optional,
      upper=upper)"""
  args = ["greeting", "user", "optional", "upper"]

  [tool.poe.tasks.greet-full-args]
  script = "pkg:greet(greeting, user, upper=upper, fvar=user_height, ivar=age)"

    [tool.poe.tasks.greet-full-args.args.greeting]
    options = ["--greeting", "-g"]
    type = "string"
    default = "hi"

    [tool.poe.tasks.greet-full-args.args.user]
    # defaults to string if no type  given

    [tool.poe.tasks.greet-full-args.args.upper]
    type = "boolean"

    [tool.poe.tasks.greet-full-args.args.age]
    options = ["--age", "-a"]
    type = "integer"

    [tool.poe.tasks.greet-full-args.args.user_height]
    options = ["--height", "-h"]
    type = "float"
    help = "The user's height in meters"

  [tool.poe.tasks.greet-strict]
  script = "pkg:greet(greeting, user=name)"
  help = "All arguments are required"

    [tool.poe.tasks.greet-strict.args.greeting]
    default = "doesn't matter"
    required = true
    help = "this one is required"

    [tool.poe.tasks.greet-strict.args.name]
    required = true
    help = "and this one is required"


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
